---

# Only setup firewall and restart docker if UCP has not already been deployed.  ie reruning playbook
- stat: path=/root/swarm-replica-join.log
  register: ucp_install_log

- include: dtr-iptables.yml
  when: ucp_install_log.stat.exists == False


# Join swarm cluster as worker

- name: "Wait for UCP controller to come up"
  uri:
    url: "https://{{ hostvars[groups['ucp-primary'][0]]['ansible_eth0']['ipv4']['address'] }}/_ping"
    validate_certs: no
  register: ucp_primary
  until: ucp_primary.status == 200
  retries: 50
  delay: 2

- name: "Join replica to cluster"
  shell: /bin/docker swarm join --token {{ hostvars[groups['ucp-primary'][0]]['worker_token'].stdout }} {{ hostvars[groups['ucp-primary'][0]]['ansible_eth0']['ipv4']['address'] }} 2>&1 | /bin/tee -a /root/swarm-replica-join.log
  args:
    creates: /root/swarm-replica-join.log


# Install DTR..

- name: "Add ucp-primary hostname to local hosts file for join (if no DNS)"
  lineinfile:
    dest=/etc/hosts
    line="{{ hostvars[groups['ucp-primary'][0]]['ansible_eth0']['ipv4']['address']|quote }}   {{ hostvars[groups['ucp-primary'][0]]['ansible_fqdn']|quote }}"
    regexp="^.*{{ hostvars[groups['ucp-primary'][0]]['ansible_fqdn']|quote }}.*$"
    owner=root
    state=present
    insertafter=EOF

- name: "Check DTR primary is up"
  uri:
    url: "https://{{ hostvars[groups['dtr-primary'][0]]['ansible_eth0']['ipv4']['address'] }}/_ping"
    validate_certs: no
  register: dtr_primary
  until: dtr_primary.status == 200
  retries: 10
  delay: 2

- debug:
    msg: "docker run --rm docker/dtr:{{ dtr_version|quote }} join --debug --ucp-node {{ fqdn }} --ucp-insecure-tls --ucp-username admin --ucp-password {{ ucp_admin_password|quote }} --ucp-url https{{':'}}//{{ ucp_ec2_fqdn|quote }} --existing-replica-id {{ hostvars[groups['dtr-primary'][0]]['dtr_replica_id'].stdout }}"

- shell: echo "docker run --rm docker/dtr:{{ dtr_version|quote }} join --debug --ucp-node {{ fqdn|quote }} --ucp-insecure-tls --ucp-username admin --ucp-password {{ ucp_admin_password|quote }} --ucp-url https://{{ ucp_fqdn|quote }} --existing-replica-id {{ hostvars[groups['dtr-primary'][0]]['dtr_replica_id'].stdout|quote }}" > /root/dtr-replica-join.cmd
  args:
    creates: /root/dtr-replica-join.cmd

- name: "Join DTR replica"
  shell: /bin/docker run --rm docker/dtr:{{ dtr_version|quote }} join --debug --ucp-node {{ fqdn|quote }} --ucp-insecure-tls --ucp-username admin --ucp-password {{ ucp_admin_password|quote }} --ucp-url https://{{ ucp_fqdn|quote }} --existing-replica-id {{ hostvars[groups['dtr-primary'][0]]['dtr_replica_id'].stdout|quote }} 2>&1 | /bin/tee -a /root/dtr-replica-join.log
  args:
    creates: /root/dtr-replica-join.log
